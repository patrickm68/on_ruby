#
# This file configures the New Relic Ruby Agent, New Relic monitors
# Rails applications with deep visibility and low overhead.  For more
# information, visit www.newrelic.com
#
# Generated September 10, 2012, for version 3.4.2
#
#


# Here are the settings that are common to all environments
common: &default_settings
  # ============================== LICENSE KEY ===============================

  # You must specify the license key associated with your New Relic
  # account.  This key binds your Agent's data to your account in the
  # New Relic service.
  license_key: "<%= ENV["NEW_RELIC_LICENSE_KEY"] %>"

  # Agent Enabled (Rails Only)
  # Use this setting to force the agent to run or not run.
  # Default is 'auto' which means the agent will install and run only
  # if a valid dispatcher such as Mongrel is running.  This prevents
  # it from running with Rake or the console.  Set to false to
  # completely turn the agent off regardless of the other settings.
  # Valid values are true, false and auto.
  #
  # agent_enabled: auto

  # Application Name Set this to be the name of your application as
  # you'd like it show up in New Relic. The service will then auto-map
  # instances of your application into an "application" on your
  # dashboard page. If you want to map this instance into multiple
  # apps, like "AJAX Requests" and "All UI" then specify a semicolon
  # separated list of up to three distinct names, or a yaml list.
  # Defaults to the capitalized RAILS_ENV or RACK_ENV (i.e.,
  # Production, Staging, etc)
  #
  # Example:
  #
  #   app_name:
  #       - Ajax Service
  #       - All Services
  #
  app_name: ["<%= ENV["NEW_RELIC_APPNAME"] %>"]

  # When "true", the agent collects performance data about your
  # application and reports this data to the New Relic service at
  # newrelic.com. This global switch is normally overridden for each
  # environment below. (formerly called 'enabled')
  monitor_mode: true

  # Developer mode should be off in every environment but
  # development as it has very high overhead in memory.
  developer_mode: <%= Rails.env.development? %>

  # The newrelic agent generates its own log file to keep its logging
  # information separate from that of your application.  Specify its
  # log level here.
  log_level: info

  # Optionally set the path to the log file This is expanded from the
  # root directory (may be relative or absolute, e.g. 'log/' or
  # '/var/log/') The agent will attempt to create this directory if it
  # does not exist.
  # log_file_path: 'log'

  # Optionally set the name of the log file, defaults to 'newrelic_agent.log'
  # log_file_name: 'newrelic_agent.log'

  # The newrelic agent communicates with the service via http by
  # default.  If you want to communicate via https to increase
  # security, then turn on SSL by setting this value to true.  Note,
  # this will result in increased CPU overhead to perform the
  # encryption involved in SSL communication, but this work is done
  # asynchronously to the threads that process your application code,
  # so it should not impact response times.
  ssl: false

  # EXPERIMENTAL: enable verification of the SSL certificate sent by
  # the server. This setting has no effect unless SSL is enabled
  # above. This may block your application. Only enable it if the data
  # you send us needs end-to-end verified certificates.
  #
  # This means we cannot cache the DNS lookup, so each request to the
  # service will perform a lookup. It also means that we cannot
  # use a non-blocking lookup, so in a worst case, if you have DNS
  # problems, your app may block indefinitely.
  # verify_certificate: true

  # Set your application's Apdex threshold value with the 'apdex_t'
  # setting, in seconds. The apdex_t value determines the buckets used
  # to compute your overall Apdex score.
  # Requests that take less than apdex_t seconds to process will be
  # classified as Satisfying transactions; more than apdex_t seconds
  # as Tolerating transactions; and more than four times the apdex_t
  # value as Frustrating transactions.
  # For more about the Apdex standard, see
  # http://newrelic.com/docs/general/apdex

  apdex_t: 0.5

  #============================== Browser Monitoring ===============================
  # New Relic Real User Monitoring gives you insight into the performance real users are
  # experiencing with your website. This is accomplished by measuring the time it takes for
  # your users' browsers to download and render your web pages by injecting a small amount
  # of JavaScript code into the header and footer of each page.
  browser_monitoring:
      # By default the agent automatically injects the monitoring JavaScript
      # into web pages. Set this attribute to false to turn off this behavior.
      auto_instrument: true

  # Proxy settings for connecting to the service.
  #
  # If a proxy is used, the host setting is required.  Other settings
  # are optional.  Default port is 8080.
  #
  # proxy_host: hostname
  # proxy_port: 8080
  # proxy_user:
  # proxy_pass:

# Application Environments
# ------------------------------------------
# Environment specific settings are in this section.
# For Rails applications, RAILS_ENV is used to determine the environment
# For Java applications, pass -Dnewrelic.environment <environment> to set
# the environment

# NOTE if your application has other named environments, you should
# provide newrelic configuration settings for these environments here.

development:
  <<: *default_settings
  # Turn off communication to New Relic service in development mode (also
  # 'enabled').
  # NOTE: for initial evaluation purposes, you may want to temporarily
  # turn the agent on in development mode.
  monitor_mode: false

  # Rails Only - when running in Developer Mode, the New Relic Agent will
  # present performance information on the last 100 transactions you have
  # executed since starting the mongrel.
  # NOTE: There is substantial overhead when running in developer mode.
  # Do not use for production or load testing.
  developer_mode: true

  # Enable textmate links
  # textmate: true

test:
  <<: *default_settings
  # It almost never makes sense to turn on the agent when running
  # unit, functional or integration tests or the like.
  monitor_mode: false

# Turn on the agent in production for 24x7 monitoring.  NewRelic
# testing shows an average performance impact of < 5 ms per
# transaction, you you can leave this on all the time without
# incurring any user-visible performance degradation.
production:
  <<: *default_settings
  monitor_mode: true
